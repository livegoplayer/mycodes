<?php
/**
 * Created by PhpStorm.
 * User: xjyplayer
 * Date: 2018/11/27
 * Time: 14:52
 */

namespace app\api\controller\v1;

use app\api\controller\AuthBase;
use app\api\lib\Aes;
use app\api\lib\IAuth;

class User extends AuthBase
{
    protected $user;
    protected $myModel;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /** 获取用户信息
     * @return \think\response\Json
     * @throws \Exception
     */
    public function read(){
        //加密用户信息
        $userencode = (new Aes())->encrypt(IAuth::ArrayToStr($this->user));
        return httpResult(config("app.result_ok"),"用户信息",$userencode);
    }

    /**修改用户信息
     * @return \think\response\Json
     * @throws \Exception
     */
    public function update()
    {
        $data = request()->put();
        //数据校验
        //验证数据格式
        $validate = Validate('User');
        if(!$validate->scene('update')->check($data)){
            return httpResult(config("app.result_error"),$validate->getError(),[],403);
        };
        //数据组装
        $userUpdate["phone"] = $this->user["phone"];
        //验证用户名是否存在
        if(isset($data["username"])){
            try{
                $userInfo = $this->myModel->get(["username" => $data["username"]]);
            }catch(\Exception $e){
                Exception($e->getFile().$e->getLine().$e->getMessage());
            }
            if(empty($userInfo)){
                $userUpdate["username"] = $data["username"];
            }else{
                return httpResult(config("app.result_error"), "用户名已经存在",[],403);
            }
        }
        if(isset($data["sex"])){
            $userUpdate["sex"] = $data["sex"];
        }
        if(isset($data["image"])){
            $userUpdate["image"] = $data["image"];
        }
        if(isset($data["signature"])){
            $userUpdate["signature"] = $data["signature"];
        }
        //数据更新

        try{
            $res = $this->myModel->upgrade($userUpdate);
        }catch(\Exception $e){
            Exception($e->getFile().$e->getLine().$e->getMessage());
        }
        if($res) {
            return httpResult(config("app.result_ok"), "更新成功");
        }else{
            return httpResult(config("app.result_error"), "更新失败",[],500);
        }
    }

    /**用户名查重
     * @return \think\response\Json
     * @throws \Exception
     */
    public function checkUsername(){
        $data = request()->get();
        //数据校验
        $validate = Validate('user');
        if(!$validate->scene('checkUsername')->check($data)){
            return httpResult(config("app.result_error"),$validate->getError(),[],403);
        };
        //数据检查
        try{
            $userInfo = $this->myModel->get(["username" => $data["username"]]);
        }catch(\Exception $e){
            Exception($e->getFile().$e->getLine().$e->getMessage());
        }
        if(empty($userInfo)){
            return httpResult(config("app.result_ok"), "用户名可用",[],200);
        }else{
            return httpResult(config("app.result_error"), "用户名已经存在",[],200);
        }
    }
}