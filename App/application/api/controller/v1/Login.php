<?php
/**
 * Created by PhpStorm.
 * User: xjyplayer
 * Date: 2018/11/26
 * Time: 22:26
 */

namespace app\api\controller\v1;

use app\api\controller\Common;
use app\api\exception\APIException;
use app\api\lib\Aes;
use app\api\lib\IAuth;
use app\common\lib\Sms;
use think\Exception;

class Login extends Common
{
    protected $myModel;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->myModel = model("common/User");
    }

    /**注册+登录 包括两种的登陆方式
     * @return \think\response\Json
     * @throws APIException
     */
    public function save()
    {
        //验证传递方式
        if(!request()->isPost()){
            throw new APIException("访问方式错误",403);
        }
        $data = request()->post();
        //验证数据
        //验证数据格式
        $validate = Validate('User');
        if(!$validate->scene('login')->check($data)){
            return httpResult(config("app.result_error"),$validate->getError(),[],400);
        };
        //初始化入库数据
        $token = IAuth::CreateToken();
        $userData["phone"] = $data["phone"];
        $userData["token"] = $token;
        $userData["timeout"] = strtotime("+".config("app.token_time_out")." days");
        //判断用户是否已经注册
        try{
            $userInfo = $this->myModel->get(["phone" => $data["phone"]]);
        }catch(\Exception $e){
            exception($e->getFile().$e->getLine().$e->getMessage());
        }
        //判断登录方式
        if(isset($data["code"])) {
            //验证验证码是否正确
            if (!Sms::check($data["phone"], $data["code"])) {
                return httpResult(config("app.result_error"), "验证码不正确或者过期", [], 403);
            }
            //用户没有注册的逻辑
            if(empty($userInfo)){
                $userData["username"] = "app".$data["phone"];
                try{
                    $res = $this->myModel->add($userData);
                }catch(\Exception $e){
                    exception($e->getFile().$e->getLine().$e->getMessage());
                }
            }else{    //用户已经注册的逻辑
                try{
                    $res = $this->myModel->upgrade($userData);
                }catch(\Exception $e){
                    exception($e->getFile().$e->getLine().$e->getMessage());
                }
            }
        }elseif(isset($data["password"])){
            //验证密码是否正确
            if(empty($userInfo)){
                return httpResult(config("app.result_error"), "用户不存在", [], 404);
            }else{
                if($userInfo["password"] == $data["password"]){
                    try{
                        $res = $this->myModel->upgrade($userData);
                    }catch(\Exception $e){
                        exception($e->getFile().$e->getLine().$e->getMessage());
                    }
                }
            }
        }else{
            return httpResult(config("app.result_error"), "参数不正确", [], 400);
        }

        //组装返回数据
        $resultData = [
            "phone" => $userData["phone"],
            "token" => (new Aes())->encrypt($userData["token"]),
        ];
        if($res) {
            return httpResult(config("app.result_ok"), "登录成功", $resultData,202);
        }else{
            exception("数据库操作失败");
        }
    }
}